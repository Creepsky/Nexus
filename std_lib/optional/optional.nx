class optional<T>
{
    include <optional>;
    c++ {|std::optional<T>|} value;
}

bool optional<T>.is_set<T>() {
    return c++ {|__this.value.has_value()|};
}

T optional<T>.get_or<T>(T value) {
    if (this.is_set())
    {
        return c++ {|__this.value.value()|};
    }
    else
    {
        return value;
    }
}

T optional<T>.get<T>() {
    if (this.is_set()) {
        return c++ {|__this.value.value()|};
    }
    else {
        c++ {|throw std::exception()|};
    }
}

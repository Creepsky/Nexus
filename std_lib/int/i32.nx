class i32
{
    include <cstdint>;

    c++ {|int32_t value;|}
    c++ {|i32(int32_t value) : value(value) { }|}
}

i32 i32.operator+(i8 rhs) {
    return this.add(rhs);
}

i32 i32.operator+(i16 rhs) {
    return this.add(rhs);
}

i32 i32.operator+(i32 rhs) {
    return this.add(rhs);
}

i32 i32.operator+(i64 rhs) {
    return this.add(rhs);
}

i32 i32.operator+(u8 rhs) {
    return this.add(rhs);
}

i32 i32.operator+(u16 rhs) {
    return this.add(rhs);
}

i32 i32.operator+(u32 rhs) {
    return this.add(rhs);
}

i32 i32.operator+(u64 rhs) {
    return this.add(rhs);
}

i32 i32.operator-(i8 rhs) {
    return this.add(rhs);
}

i32 i32.operator-(i16 rhs) {
    return this.add(rhs);
}

i32 i32.operator-(i32 rhs) {
    return this.add(rhs);
}

i32 i32.operator-(i64 rhs) {
    return this.add(rhs);
}

usize i32.minimum() {
    include <limits>;

    return c++ {|
        std::numeric_limits<int32_t>::max()
    |};
}

usize i32.maximum() {
    include <limits>;

    return c++ {|
        std::numeric_limits<int32_t>::max()
    |};
}